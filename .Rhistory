linemitre = 10
),
vp = NULL,
cl = "trail"
)
)
}
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour")
)
p + geom_trail(aes( label = round(C,1)),
type = "text", size = 8)
GeomTrail <- ggplot2::ggproto(
"GeomTrail", ggplot2::GeomPoint,
default_aes = ggplot2::aes(
shape = 19, colour = "black", gap = .7, size = 1.5, fill = NA,
alpha = NA, stroke = 0.5,
linesize = 0.5, linetype = 1, label = NA, angle = 0,
hjust = 0.5, vjust = 0.5, family = "", fontface = 1, lineheight = 1.2
),
use_defaults = function(self, data, params = list(), modifiers = aes()) {
new_data <- ggproto_parent(GeomPath, self)$use_defaults(
data, params, modifiers
)
if (any(!is.na(new_data$label))) {
if(is.null(params$size)){
# Scale to GeomText defaults
new_data$size <- 8* 1/.pt
new_data$gap <- 0.9
} else {
new_data$size <- params$size * 1/.pt
}
}
new_data
# browser()
},
draw_panel = function(self, data, panel_params, coord, arrow = NULL, type,
parse, check_overlap,
lineend = "butt", linejoin = "round", linemitre = 10,
na.rm = FALSE) {
if (!anyDuplicated(data$group)) {
ggplot2:::message_wrap("geom_path: Each group consists of only one observation. ",
"Do you need to adjust the group aesthetic?")
}
##Default geom point behaviour
if (is.character(data$shape)) {
data$shape <- translate_shape_string(data$shape)
}
coords <- coord$transform(data, panel_params)
my_points <-
switch(type, point = ggproto_parent(GeomPoint, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm
), text = ggproto_parent(GeomText, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm,
parse = parse, check_overlap = check_overlap
)
)
##must be sorted on group
data <- data[order(data$group), , drop = FALSE]
munched <- coord_munch(coord, data, panel_params)
##Silently drop lines with less than two points, preserving order
rows <- stats::ave(seq_len(nrow(munched)), munched$group, FUN = length)
munched <- munched[rows >= 2, ]
if (nrow(munched) < 2) {
my_path <- zeroGrob()
} else {
munched <- transform(munched,
xend = c(tail(x, -1), NA),
yend = c(tail(y, -1), NA),
keep = c(group[-1] == head(group, -1), FALSE))
munched <- munched[munched$keep, ]
my_path <- switch(type,
point = grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = (munched$size * .pt + munched$stroke * .stroke / 2) * munched$gap,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
),
text = grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = munched$size  * munched$gap,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
)
)
}
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour")
)
p + geom_trail(aes( label = round(C,1)),
type = "text", size = 8)
p + geom_trail(aes( label = round(C,1)),
type = "text", size = 10)
p + geom_trail(aes( label = round(C,1)),
type = "text", size = 20)
GeomTrail <- ggplot2::ggproto(
"GeomTrail", ggplot2::GeomPoint,
default_aes = ggplot2::aes(
shape = 19, colour = "black", gap = .7, size = 1.5, fill = NA,
alpha = NA, stroke = 0.5,
linesize = 0.5, linetype = 1, label = NA, angle = 0,
hjust = 0.5, vjust = 0.5, family = "", fontface = 1, lineheight = 1.2
),
use_defaults = function(self, data, params = list(), modifiers = aes()) {
new_data <- ggproto_parent(GeomPath, self)$use_defaults(
data, params, modifiers
)
if (any(!is.na(new_data$label))) {
if(is.null(params$size)){
# Scale to GeomText defaults
new_data$size <- 8* 1/.pt
new_data$gap <- 0.9
} else {
new_data$size <- params$size * 1/.pt
}
}
new_data
# browser()
},
draw_panel = function(self, data, panel_params, coord, arrow = NULL, type,
parse, check_overlap,
lineend = "butt", linejoin = "round", linemitre = 10,
na.rm = FALSE) {
if (!anyDuplicated(data$group)) {
ggplot2:::message_wrap("geom_path: Each group consists of only one observation. ",
"Do you need to adjust the group aesthetic?")
}
##Default geom point behaviour
if (is.character(data$shape)) {
data$shape <- translate_shape_string(data$shape)
}
coords <- coord$transform(data, panel_params)
my_points <-
switch(type, point = ggproto_parent(GeomPoint, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm
), text = ggproto_parent(GeomText, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm,
parse = parse, check_overlap = check_overlap
)
)
##must be sorted on group
data <- data[order(data$group), , drop = FALSE]
munched <- coord_munch(coord, data, panel_params)
##Silently drop lines with less than two points, preserving order
rows <- stats::ave(seq_len(nrow(munched)), munched$group, FUN = length)
munched <- munched[rows >= 2, ]
if (nrow(munched) < 2) {
my_path <- zeroGrob()
} else {
munched <- transform(munched,
xend = c(tail(x, -1), NA),
yend = c(tail(y, -1), NA),
keep = c(group[-1] == head(group, -1), FALSE))
munched <- munched[munched$keep, ]
my_path <- switch(type,
point = grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = (munched$size * .pt + munched$stroke * .stroke / 2) * munched$gap,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
),
text = grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = munched$size * munched$gap * .pt,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
)
)
}
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour")
)
p + geom_trail(aes( label = round(C,1)),
type = "text", size = 10)
p + geom_trail(aes( label = round(C,1)),
type = "text", size = 8)
p + geom_trail(aes( label = round(C,1)),
type = "text", size = 10)
GeomTrail <- ggplot2::ggproto(
"GeomTrail", ggplot2::GeomPoint,
default_aes = ggplot2::aes(
shape = 19, colour = "black", gap = .7, size = 1.5, fill = NA,
alpha = NA, stroke = 0.5,
linesize = 0.5, linetype = 1, label = NA, angle = 0,
hjust = 0.5, vjust = 0.5, family = "", fontface = 1, lineheight = 1.2
),
use_defaults = function(self, data, params = list(), modifiers = aes()) {
new_data <- ggproto_parent(GeomPath, self)$use_defaults(
data, params, modifiers
)
if (any(!is.na(new_data$label))) {
if(is.null(params$size)){
# Scale to GeomText defaults
new_data$size <- 8* 1/.pt
} else {
new_data$size <- params$size * 1/.pt
}
}
new_data
# browser()
},
draw_panel = function(self, data, panel_params, coord, arrow = NULL, type,
parse, check_overlap,
lineend = "butt", linejoin = "round", linemitre = 10,
na.rm = FALSE) {
if (!anyDuplicated(data$group)) {
ggplot2:::message_wrap("geom_path: Each group consists of only one observation. ",
"Do you need to adjust the group aesthetic?")
}
##Default geom point behaviour
if (is.character(data$shape)) {
data$shape <- translate_shape_string(data$shape)
}
coords <- coord$transform(data, panel_params)
my_points <-
switch(type, point = ggproto_parent(GeomPoint, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm
), text = ggproto_parent(GeomText, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm,
parse = parse, check_overlap = check_overlap
)
)
##must be sorted on group
data <- data[order(data$group), , drop = FALSE]
munched <- coord_munch(coord, data, panel_params)
##Silently drop lines with less than two points, preserving order
rows <- stats::ave(seq_len(nrow(munched)), munched$group, FUN = length)
munched <- munched[rows >= 2, ]
if (nrow(munched) < 2) {
my_path <- zeroGrob()
} else {
munched <- transform(munched,
xend = c(tail(x, -1), NA),
yend = c(tail(y, -1), NA),
keep = c(group[-1] == head(group, -1), FALSE))
munched <- munched[munched$keep, ]
my_path <- switch(type,
point = grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = (munched$size * .pt + munched$stroke * .stroke / 2) * munched$gap,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
),
text = grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = munched$size * munched$gap * .pt,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
)
)
}
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour")
)
p + geom_trail(aes( label = round(C,1)),
type = "text", size = 10)
p + geom_trail()
p + geom_trail(aes( label = round(C,1)),
type = "text")
p + geom_trail(aes( label = round(C,1)),
type = "text", size = 10)
GeomTrail <- ggplot2::ggproto(
"GeomTrail", ggplot2::GeomPoint,
default_aes = ggplot2::aes(
shape = 19, colour = "black", gap = .7, size = 1.5, fill = NA,
alpha = NA, stroke = 0.5,
linesize = 0.5, linetype = 1, label = NA, angle = 0,
hjust = 0.5, vjust = 0.5, family = "", fontface = 1, lineheight = 1.2
),
use_defaults = function(self, data, params = list(), modifiers = aes()) {
new_data <- ggproto_parent(GeomPath, self)$use_defaults(
data, params, modifiers
)
if (any(!is.na(new_data$label))) {
if(is.null(params$size)){
new_data$size <- 8* 1/.pt
} else {
new_data$size <- params$size * 1/.pt
}
}
new_data
# browser()
},
draw_panel = function(self, data, panel_params, coord, arrow = NULL, type,
parse, check_overlap,
lineend = "butt", linejoin = "round", linemitre = 10,
na.rm = FALSE) {
if (!anyDuplicated(data$group)) {
ggplot2:::message_wrap("geom_path: Each group consists of only one observation. ",
"Do you need to adjust the group aesthetic?")
}
##Default geom point behaviour
if (is.character(data$shape)) {
data$shape <- translate_shape_string(data$shape)
}
coords <- coord$transform(data, panel_params)
my_points <-
switch(type, point = ggproto_parent(GeomPoint, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm
), text = ggproto_parent(GeomText, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm,
parse = parse, check_overlap = check_overlap
)
)
##must be sorted on group
data <- data[order(data$group), , drop = FALSE]
munched <- coord_munch(coord, data, panel_params)
##Silently drop lines with less than two points, preserving order
rows <- stats::ave(seq_len(nrow(munched)), munched$group, FUN = length)
munched <- munched[rows >= 2, ]
if (nrow(munched) < 2) {
my_path <- zeroGrob()
} else {
munched <- transform(munched,
xend = c(tail(x, -1), NA),
yend = c(tail(y, -1), NA),
keep = c(group[-1] == head(group, -1), FALSE))
munched <- munched[munched$keep, ]
my_path <- switch(type,
point = grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = (munched$size * .pt + munched$stroke * .stroke / 2) * munched$gap,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
),
text = grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = munched$size * munched$gap * .pt,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
)
)
}
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour")
)
p + geom_trail(aes( label = round(C,1)),
type = "text", size = 10)
p + geom_trail()
p2 <- p +
geom_trail(aes(group = age_cut10, label = round(mean_va)),
type = "text",
size = 8,
show.legend = FALSE)
p1 + p2 +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
library(patchwork)
p1 <- p + geom_trail(aes(group = age_cut10), gap = .5)
p2 <- p +
geom_trail(aes(group = age_cut10, label = round(mean_va)),
type = "text",
size = 8,
show.legend = FALSE)
p1 + p2 +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
p <-
ggplot(amd_aggr, aes(days_cut90, mean_va, color = age_cut10)) +
scale_color_brewer(palette = "Set1") +
theme_classic() +
labs(
x = "Follow up time [binned by 90 days]", y = "Mean VA [ETDRS letters]",
color = "Age strata"
)
p2 <- p +
geom_trail(aes(group = age_cut10, label = round(mean_va)),
type = "text",
size = 8,
show.legend = FALSE)
p1
p2
p + geom_trail(aes(group = age_cut10), gap = .5)
p1 <- p + geom_trail(aes(group = age_cut10), gap = .5)
p2 <- p +
geom_trail(aes(group = age_cut10, label = round(mean_va)),
type = "text",
size = 8,
show.legend = FALSE)
p1 + p2 +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
p2 <- p +
geom_trail(aes(group = age_cut10, label = round(mean_va)),
type = "text",
show.legend = FALSE)
p1 + p2 +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
p2 <- p +
geom_trail(aes(group = age_cut10, label = round(mean_va)),
type = "text",
show.legend = FALSE, gap = .2)
p1 + p2 +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
p2 <- p +
geom_trail(aes(group = age_cut10, label = round(mean_va)),
type = "text",
show.legend = FALSE, gap = .3)
p1 + p2 +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
library(ggtrail)
