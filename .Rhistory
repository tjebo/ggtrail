lineend = "butt", linejoin = "round", linemitre = 10,
na.rm = FALSE) {
if (!anyDuplicated(data$group)) {
message_wrap("geom_path: Each group consists of only one observation. ",
"Do you need to adjust the group aesthetic?")
}
# ggplot:
##must be sorted on group
data <- data[order(data$group), , drop = FALSE]
munched <- coord_munch(coord, data, panel_params)
# ggplot:
##Default geom point behaviour
if (is.character(data$shape)) {
data$shape <- translate_shape_string(data$shape)
}
coords <- coord$transform(data, panel_params)
my_points <- ggproto_parent(GeomPoint, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm
)
# ggplot:
##Silently drop lines with less than two points, preserving order
rows <- stats::ave(seq_len(nrow(munched)), munched$group, FUN = length)
munched <- munched[rows >= 2, ]
if (nrow(munched) < 2) {
return(zeroGrob())
}
## tjebo:
## here, ggplot2:::dapply() checks which grob to use (segment or lines),
## but it also does not seem to have an effect, or at least I don't know
## to change the grob in this case
data <- coord_munch(coord, data, panel_params)
munched <- transform(munched,
xend = c(tail(x, -1), NA),
yend = c(tail(y, -1), NA),
keep = c(group[-1] == head(group, -1), FALSE))
munched <- munched[munched$keep, ]
# teunbrand:
# New behaviour
## Convert x and y to units
# x <- unit(munched$x, "npc")
# y <- unit(munched$y, "npc")
## Work out grouping variables for grobs
n <- nrow(munched)
group_diff <- munched$group[-1] != munched$group[-n]
start <- c(TRUE, group_diff)
end <- c(group_diff, TRUE)
## teunbrand: Custom grob class
my_path <- grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
# x = x, y = y,
mult = munched$gap * .pt,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha)[!end], # this could also be [start]
fill = alpha(munched$colour, munched$alpha)[!end],
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
)
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour") # Omit shape here
)
ggplot(testdf, aes(x, y)) +
geom_trail(aes(group = id), shape = NA)
GeomTrail <- ggplot2::ggproto(
"GeomTrail", ggplot2::GeomPoint,
default_aes = ggplot2::aes(
shape = 19, colour = "black", size = 1.5, fill = NA, alpha = NA, stroke = 0.5,
linesize = 0.5, linetype = 1, gap = .9,
),
## tjebo:
## here is a function handle_na(), which does have no effect on the problem
draw_panel = function(self, data, panel_params, coord, arrow = NULL,
lineend = "butt", linejoin = "round", linemitre = 10,
na.rm = FALSE) {
if (!anyDuplicated(data$group)) {
message_wrap("geom_path: Each group consists of only one observation. ",
"Do you need to adjust the group aesthetic?")
}
# ggplot:
##must be sorted on group
data <- data[order(data$group), , drop = FALSE]
munched <- coord_munch(coord, data, panel_params)
# ggplot:
##Default geom point behaviour
if (is.character(data$shape)) {
data$shape <- translate_shape_string(data$shape)
}
coords <- coord$transform(data, panel_params)
my_points <- ggproto_parent(GeomPoint, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm
)
# ggplot:
##Silently drop lines with less than two points, preserving order
rows <- stats::ave(seq_len(nrow(munched)), munched$group, FUN = length)
munched <- munched[rows >= 2, ]
if (nrow(munched) < 2) {
return(zeroGrob())
}
## tjebo:
## here, ggplot2:::dapply() checks which grob to use (segment or lines),
## but it also does not seem to have an effect, or at least I don't know
## to change the grob in this case
data <- coord_munch(coord, data, panel_params)
munched <- transform(munched,
xend = c(tail(x, -1), NA),
yend = c(tail(y, -1), NA),
keep = c(group[-1] == head(group, -1), FALSE))
munched <- munched[munched$keep, ]
# teunbrand:
# New behaviour
## Convert x and y to units
# x <- unit(munched$x, "npc")
# y <- unit(munched$y, "npc")
## Work out grouping variables for grobs
# n <- nrow(munched)
# group_diff <- munched$group[-1] != munched$group[-n]
# start <- c(TRUE, group_diff)
# end <- c(group_diff, TRUE)
## teunbrand: Custom grob class
my_path <- grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
# x = x, y = y,
mult = munched$gap * .pt,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha)[!end], # this could also be [start]
fill = alpha(munched$colour, munched$alpha)[!end],
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
)
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour") # Omit shape here
)
ggplot(testdf, aes(x, y)) +
geom_trail(aes(group = id), shape = NA)
GeomTrail <- ggplot2::ggproto(
"GeomTrail", ggplot2::GeomPoint,
default_aes = ggplot2::aes(
shape = 19, colour = "black", size = 1.5, fill = NA, alpha = NA, stroke = 0.5,
linesize = 0.5, linetype = 1, gap = .9,
),
## tjebo:
## here is a function handle_na(), which does have no effect on the problem
draw_panel = function(self, data, panel_params, coord, arrow = NULL,
lineend = "butt", linejoin = "round", linemitre = 10,
na.rm = FALSE) {
if (!anyDuplicated(data$group)) {
message_wrap("geom_path: Each group consists of only one observation. ",
"Do you need to adjust the group aesthetic?")
}
# ggplot:
##must be sorted on group
data <- data[order(data$group), , drop = FALSE]
munched <- coord_munch(coord, data, panel_params)
# ggplot:
##Default geom point behaviour
if (is.character(data$shape)) {
data$shape <- translate_shape_string(data$shape)
}
coords <- coord$transform(data, panel_params)
my_points <- ggproto_parent(GeomPoint, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm
)
# ggplot:
##Silently drop lines with less than two points, preserving order
rows <- stats::ave(seq_len(nrow(munched)), munched$group, FUN = length)
munched <- munched[rows >= 2, ]
if (nrow(munched) < 2) {
return(zeroGrob())
}
## tjebo:
## here, ggplot2:::dapply() checks which grob to use (segment or lines),
## but it also does not seem to have an effect, or at least I don't know
## to change the grob in this case
data <- coord_munch(coord, data, panel_params)
munched <- transform(munched,
xend = c(tail(x, -1), NA),
yend = c(tail(y, -1), NA),
keep = c(group[-1] == head(group, -1), FALSE))
munched <- munched[munched$keep, ]
# teunbrand:
# New behaviour
## Convert x and y to units
# x <- unit(munched$x, "npc")
# y <- unit(munched$y, "npc")
## Work out grouping variables for grobs
# n <- nrow(munched)
# group_diff <- munched$group[-1] != munched$group[-n]
# start <- c(TRUE, group_diff)
# end <- c(group_diff, TRUE)
## teunbrand: Custom grob class
my_path <- grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
# x = x, y = y,
mult = munched$gap * .pt,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha), # this could also be [start]
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
)
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour") # Omit shape here
)
ggplot(testdf, aes(x, y)) +
geom_trail(aes(group = id), shape = NA)
ggplot(testdf, aes(x, y)) +
geom_path(aes(group = id), shape = NA)
ggplot(testdf, aes(x, y)) +
geom_trail(aes(group = id), shape = NA)
ggplot(testdf, aes(x, y)) +
geom_trail(aes(group = id))
ggplot(testdf, aes(x, y)) +
geom_trail(aes(group = id, color = group))
GeomTrail <- ggplot2::ggproto(
"GeomTrail", ggplot2::GeomPoint,
default_aes = ggplot2::aes(
shape = 19, colour = "black", size = 1.5, fill = NA, alpha = NA, stroke = 0.5,
linesize = 0.5, linetype = 1, gap = .9,
),
## tjebo:
## here is a function handle_na(), which does have no effect on the problem
draw_panel = function(self, data, panel_params, coord, arrow = NULL,
lineend = "butt", linejoin = "round", linemitre = 10,
na.rm = FALSE) {
if (!anyDuplicated(data$group)) {
message_wrap("geom_path: Each group consists of only one observation. ",
"Do you need to adjust the group aesthetic?")
}
# ggplot:
##must be sorted on group
data <- data[order(data$group), , drop = FALSE]
munched <- coord_munch(coord, data, panel_params)
# ggplot:
##Default geom point behaviour
if (is.character(data$shape)) {
data$shape <- translate_shape_string(data$shape)
}
coords <- coord$transform(data, panel_params)
my_points <- ggproto_parent(GeomPoint, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm
)
# ggplot:
##Silently drop lines with less than two points, preserving order
rows <- stats::ave(seq_len(nrow(munched)), munched$group, FUN = length)
munched <- munched[rows >= 2, ]
if (nrow(munched) < 2) {
return(zeroGrob())
}
## tjebo:
## here, ggplot2:::dapply() checks which grob to use (segment or lines),
## but it also does not seem to have an effect, or at least I don't know
## to change the grob in this case
data <- coord_munch(coord, data, panel_params)
munched <- transform(munched,
xend = c(tail(x, -1), NA),
yend = c(tail(y, -1), NA),
keep = c(group[-1] == head(group, -1), FALSE))
munched <- munched[munched$keep, ]
my_path <- grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = munched$gap * .pt,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
)
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour") # Omit shape here
)
ggplot(testdf, aes(x, y)) +
geom_path(aes(group = id), shape = NA)
ggplot(testdf, aes(x, y)) +
geom_trail(aes(group = id, color = group))
GeomTrail <- ggplot2::ggproto(
"GeomTrail", ggplot2::GeomPoint,
default_aes = ggplot2::aes(
shape = 19, colour = "black", size = 1.5, fill = NA, alpha = NA, stroke = 0.5,
linesize = 0.5, linetype = 1, gap = .9,
),
## tjebo:
## here is a function handle_na(), which does have no effect on the problem
draw_panel = function(self, data, panel_params, coord, arrow = NULL,
lineend = "butt", linejoin = "round", linemitre = 10,
na.rm = FALSE) {
if (!anyDuplicated(data$group)) {
message_wrap("geom_path: Each group consists of only one observation. ",
"Do you need to adjust the group aesthetic?")
}
##must be sorted on group
data <- data[order(data$group), , drop = FALSE]
munched <- coord_munch(coord, data, panel_params)
##Default geom point behaviour
if (is.character(data$shape)) {
data$shape <- translate_shape_string(data$shape)
}
coords <- coord$transform(data, panel_params)
my_points <- ggproto_parent(GeomPoint, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm
)
##Silently drop lines with less than two points, preserving order
rows <- stats::ave(seq_len(nrow(munched)), munched$group, FUN = length)
munched <- munched[rows >= 2, ]
if (nrow(munched) < 2) {
return(zeroGrob())
}
munched <- transform(munched,
xend = c(tail(x, -1), NA),
yend = c(tail(y, -1), NA),
keep = c(group[-1] == head(group, -1), FALSE))
munched <- munched[munched$keep, ]
my_path <- grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = munched$gap * .pt,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
)
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour") # Omit shape here
)
ggplot(testdf, aes(x, y)) +
geom_path(aes(group = id), shape = NA)
ggplot(testdf, aes(x, y)) +
geom_trail(aes(group = id, color = group))
p1 <- ggplot(testdf, aes(x, y)) +
geom_trail(aes(group = id, color = group))
p1+p1# not modified hook
library(patchwork)
p1+p1# not modified hook
library(ggtrail)
testdf <- structure(list(A = c("(75,85", "(75,85", "(75,85", "(75,85",
"(75,85", "(75,85", "(75,85", "(75,85", "(75,85", "(85,95", "(85,95",
"(85,95", "(85,95", "(85,95", "(85,95", "(85,95", "(85,95", "(85,95",
"(95,105", "(95,105", "(95,105", "(95,105", "(95,105", "(95,105",
"(95,105", "(95,105", "(95,105"), B = c("0", "180", "270", "360",
"450", "540", "630", "720", "90", "0", "180", "270", "360", "450",
"540", "630", "720", "90", "0", "180", "270", "360", "450", "540",
"630", "720", "90"), C = c(57.4992967651196, 61.5562760537286,
61.3364097831103, 61.2489177489177, 61.8064171122995, 62.0222355769231,
62.1152291105121, 62.4370314842579, 61.0354914196568, 56.34151547492,
60.8717557251908, 59.6534508076358, 59.1148936170213, 60.2280071813285,
59.5571428571429, 60.0696055684455, 59.7123287671233, 59.9706572769953,
53.6289752650177, 56.3720930232558, 56.4319248826291, 54.5657894736842,
56.4674556213018, 55.9864864864865, 56.625, 58.2210526315789,
55.8153846153846)), row.names = c(NA, -27L), class = c("tbl_df",
"tbl", "data.frame"))
p <-  testdf %>% arrange(A,B) %>%
ggplot( aes(B, C, color = A))
p1 <- p + geom_trail(aes(group = A))
library(patchwork)
p1+p1
library(ggtrail)
p <-  testdf %>% arrange(A,B) %>%
ggplot( aes(B, C, color = A))
p1 <- p + geom_trail(aes(group = A))
p1+p1
library(tidyverse)
library(eye)
amd_aggr <-
amd %>%
group_by(
age_cut10 = cut_width(BaselineAge, 10),
days_cut90 = cut_width(FollowupDays, 90, labels = seq(0, 810, 90))
) %>%
summarise(mean_va = mean(VA_ETDRS_Letters)) %>%
filter(as.integer(days_cut90) <= 9)
p <-
ggplot(amd_aggr, aes(days_cut90, mean_va, color = age_cut10)) +
scale_color_brewer(palette = "Set1") +
theme_classic() +
labs(
x = "Follow up time [binned by 90 days]", y = "Mean VA [ETDRS letters]",
color = "Age strata"
)
p1 <- p + geom_trail(aes(group = age_cut10))
p1
p1 <- p + geom_trail(aes(group = age_cut10), gap = .5)
p1
p + geom_trail(aes(group = age_cut10), shape = NA)
p2 <- p + geom_trail(aes(group = age_cut10), gap = .5,shape = NA) +
geom_text(aes(label = round(mean_va, 0)), show.legend = FALSE)
p1+p2
p2 <- p + geom_trail(aes(group = age_cut10), gap = .5,shape = NA) +
geom_text(aes(label = round(mean_va, 0)), size = 5/14*8, show.legend = FALSE)
p1+p2
p1+p2 +plot_layout(guides = "collect")
p1+p2 &theme(legend.position = "bottom")
p1+p2 +plot_layout(guides = "collect") &theme(legend.position = "bottom")
p2 <- p + geom_trail(aes(group = age_cut10), gap = .4,shape = NA, show.legend = FALSE) +
geom_text(aes(label = round(mean_va, 0)), size = 5/14*8, show.legend = FALSE)
p1+p2 +plot_layout(guides = "collect") &theme(legend.position = "bottom")
GeomTrail <- ggplot2::ggproto(
"GeomTrail", ggplot2::GeomPoint,
default_aes = ggplot2::aes(
shape = 20, colour = "black", size = 1.5, fill = NA, alpha = NA, stroke = 0.5,
linesize = 0.5, linetype = 1, gap = .9,
),
draw_panel = function(self, data, panel_params, coord, arrow = NULL,
lineend = "butt", linejoin = "round", linemitre = 10,
na.rm = FALSE) {
if (!anyDuplicated(data$group)) {
message_wrap("geom_path: Each group consists of only one observation. ",
"Do you need to adjust the group aesthetic?")
}
##must be sorted on group
data <- data[order(data$group), , drop = FALSE]
munched <- coord_munch(coord, data, panel_params)
##Default geom point behaviour
if (is.character(data$shape)) {
data$shape <- translate_shape_string(data$shape)
}
coords <- coord$transform(data, panel_params)
my_points <- ggproto_parent(GeomPoint, self)$draw_panel(
data, panel_params, coord, na.rm = na.rm
)
##Silently drop lines with less than two points, preserving order
rows <- stats::ave(seq_len(nrow(munched)), munched$group, FUN = length)
munched <- munched[rows >= 2, ]
if (nrow(munched) < 2) {
return(zeroGrob())
}
munched <- transform(munched,
xend = c(tail(x, -1), NA),
yend = c(tail(y, -1), NA),
keep = c(group[-1] == head(group, -1), FALSE))
munched <- munched[munched$keep, ]
my_path <- grid::grob(
x0 = unit(munched$x, "npc"), x1 = unit(munched$xend, "npc"),
y0 = unit(munched$y, "npc"), y1 = unit(munched$yend, "npc"),
mult = (munched$size * .pt + munched$stroke * .stroke / 2) * munched$gap,
name = "trail",
gp = grid::gpar(
col = alpha(munched$colour, munched$alpha),
fill = alpha(munched$colour, munched$alpha),
lwd = munched$linesize * .pt,
lty = munched$linetype,
lineend = "butt",
linejoin = "round",
linemitre = 10
),
vp = NULL,
cl = "trail"
)
ggplot2:::ggname(
"geom_trail",
grid::grobTree(my_path, my_points)
)
},
non_missing_aes = c("size", "colour")
)
